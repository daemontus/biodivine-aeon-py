name: aeon

on:
  push:
  pull_request:

jobs:
  aeon-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o aeon/dist -m aeon/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels-aeon
          path: aeon/dist

  aeon-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o aeon/dist -m aeon/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels-aeon
          path: aeon/dist

  aeon-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o aeon/dist --universal2 -m aeon/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels-aeon
          path: aeon/dist

  aeon-release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ aeon-macos, aeon-windows, aeon-linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels-aeon
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
